# This file contains common pin mappings for RAMPS (v1.3 and later)
# boards. RAMPS boards typically use a firmware compiled for the AVR
# atmega2560 (though other AVR chips are also possible).

# See the example.cfg file for a description of available parameters.

[stepper_x]
step_pin: ar54
dir_pin: ar55
enable_pin: !ar38
step_distance: .005
endstop_pin: ^!ar3
#endstop_pin: ^ar2
position_endstop: 0
position_max: 200
homing_speed: 30

[stepper_y]
step_pin: ar60
dir_pin: ar61
enable_pin: !ar56
step_distance: .005
endstop_pin: ^!ar14
#endstop_pin: ^ar15
position_endstop: 0
position_max: 200
homing_speed: 30

[stepper_z]
step_pin: ar46
dir_pin: ar48
enable_pin: ar62
step_distance: .00125
endstop_pin: probe:z_virtual_endstop
#endstop_pin: ^!ar18
#endstop_pin: ^ar19
#position_endstop: 34.26
position_max: 200
homing_speed: 3

[extruder]
step_pin: ar26
dir_pin: ar28
enable_pin: !ar24
step_distance: .002
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: ar10
sensor_type: EPCOS 100K B57560G104F
sensor_pin: analog13
control: pid
pid_Kp: 22.2
pid_Ki: 1.08
pid_Kd: 114
min_temp: 0
max_temp: 250

#[extruder1]
#step_pin: ar36
#dir_pin: ar34
#enable_pin: !ar30
#heater_pin: ar9
#sensor_pin: analog15
#...

[heater_bed]
heater_pin: ar8
sensor_type: EPCOS 100K B57560G104F
sensor_pin: analog14
control: watermark
min_temp: 0
max_temp: 130

[fan]
pin: ar9

[mcu]
serial: /dev/printerserial
pin_map: arduino

[printer]
kinematics: cartesian
max_velocity: 300
max_accel: 1000
max_z_velocity: 5
max_z_accel: 100

[servo bltouch]
pin: ar11
initial_angle: 55
maximum_servo_angle: 160
minimum_pulse_width: 0.0006
maximum_pulse_width: 0.0026

[probe]
pin: ^!ar18
z_offset: 34.26
activate_gcode:
   	SET_SERVO SERVO=bltouch ANGLE=120
    	G4 P200
deactivate_gcode:
    	SET_SERVO SERVO=bltouch ANGLE=55
	G4 P100

# Servos (one may define any number of sections with a "servo"
# prefix). The servos may be controlled using the SET_SERVO g-code
# command. For example: SET_SERVO SERVO=my_servo ANGLE=180
#[servo servozprobe]
#pin: digital11
#maximum_servo_angle: 170
#minimum_pulse_width: 0.001
#maximum_pulse_width: 0.002
#initial_angle: 70
#initial_pulse_width: 0.0015
#   Initial pulse width time (in seconds) to set the servo to when
#   the mcu resets.  Must be between minimum_pulse_width and maximum_pulse_width.
#   This parameter is optional.  If both initial_angle and initial_pulse_width
#   are set initial_angle will be used
#enable: True
#   Enable or disable servo. It can be enabled or disabled later using
#   SET_SERVO SERVO=my_servo ENABLE=<0|1> g-command. The default is True (=enabled)
